---

- name: Build openshift download urls
  set_fact:
    tmp_openshift_install_download_url: "{{ openshift_location }}/openshift-install-linux-{{ openshift_version }}.tar.gz"
    tmp_openshift_client_download_url: "{{ openshift_location }}/openshift-client-linux-{{ openshift_version }}.tar.gz"
    

- name: Check download urls
  uri:
    method: HEAD
    url: "{{ item }}"  
    status_code: 200
  with_items:
    - "{{ coreos_download_url }}"
    - "{{ tmp_openshift_install_download_url }}"
    - "{{ tmp_openshift_client_download_url }}"
    - "{{ helm_cli_location }}"

# Can not use get_url because: get_url do not support --compressed
- name: Download CoreOS image
  command:
    "curl --compressed -J -L -o {{ coreos_image_location }} {{ coreos_download_url }}"
  args:
    creates: "{{ coreos_image_location }}"
    warn: false

- name: Check coreos image filetype
  stat:
    path: "{{ coreos_image_location }}"
  register: coreos_image

- block:
  - name: Rename image -> image.gzip
    command: "mv {{ coreos_image_location }} {{ coreos_image_location }}.gz"
  - name: Unzip
    command: "gzip -d {{ coreos_image_location }}.gz"
  when: coreos_image.stat.mimetype == "application/x-gzip"

- name: CoreOS image checksum check
  stat:
    path: "{{ coreos_image_location }}"
  register: checksum_coreos_image

- name: Compare checksum
  fail:
    msg: |
      Please check coreos image, something looks wrong!
      File {{ coreos_image_location }} (Checksum: {{ checksum_coreos_image.stat.checksum }})
      The checksum should be {{ coreos_checksum }}
      Download location: {{ coreos_download_url }}
  when: checksum_coreos_image.stat.checksum != coreos_checksum

- name: Create OpenShift artifacts directory
  file:
    path: "/opt/openshift-{{ item }}-{{ openshift_version }}"
    state: directory
    mode: u+rwx,g-rx,o-rx
  with_items:
  - install
  - client

- name: Download Openshift installer
  unarchive:
    src: "{{ tmp_openshift_install_download_url }}"
    dest: "/opt/openshift-install-{{ openshift_version }}/"
    remote_src: yes
    creates: "/opt/openshift-install-{{ openshift_version }}/openshift-install"

- name: Download Openshift client
  unarchive:
    src: "{{ tmp_openshift_client_download_url }}"
    dest: "/opt/openshift-client-{{ openshift_version }}/"
    remote_src: yes
    creates: "/opt/openshift-client-{{ openshift_version }}/oc"

- name: Download Helm client
  get_url:
    url: "{{ helm_cli_location }}"
    dest: "/opt/openshift-client-{{ openshift_version }}/helm"

- name: Create a symbolic link
  file:
    src: "{{ item.value }}"
    dest: "{{ item.key }}"
    state: link
    force: yes
  with_dict:
    "/usr/local/bin/oc": "/opt/openshift-client-{{ openshift_version }}/oc"
    "/usr/local/bin/kubectl": "/opt/openshift-client-{{ openshift_version }}/kubectl"
    "/usr/local/bin/openshift-install": "/opt/openshift-install-{{ openshift_version }}/openshift-install"
    "/usr/local/bin/helm": "/opt/openshift-client-{{ openshift_version }}/helm"
